[
    {
        "Convey": "Check getFromList with no parameters 1",
        "Zome": "anchors",
        "FnName": "getFromList",
        "Input": { },
        "Output": "",
        "Exposure": "public",
        "Err": "Must pass either anchor or anchorHash!",
        "Regexp": ""
    },
    {
        "Convey": "Check getFromList with no parameters 2",
        "Zome": "anchors",
        "Raw": true,
        "Input": "JSON.stringify(getFromList());",
        "Output": "",
        "Exposure": "public",
        "Err": "JS exec error: Must pass either anchor or anchorHash!",
        "Regexp": ""
    },
    {
        "Convey": "Check addToList with no parameters 1",
        "Zome": "anchors",
        "FnName": "addToList",
        "Input": { },
        "Output": "",
        "Exposure": "public",
        "Err": "Must pass either anchor or anchorHash!",
        "Regexp": ""
    },
    {
        "Convey": "Check addToList with no parameters 2",
        "Zome": "anchors",
        "FnName": "addToList",
        "Input": { },
        "Output": "",
        "Exposure": "public",
        "Err": "Must pass either anchor or anchorHash!",
        "Regexp": ""
    },
    {
        "Convey": "Check addToList with no anchor parameter",
        "Zome": "anchors",
        "Raw": true,
        "Input": "JSON.stringify(addToList({ value: 'test_value' }));",
        "Output": "",
        "Exposure": "public",
        "Err": "JS exec error: Must pass either anchor or anchorHash!",
        "Regexp": ""
    },
    {
        "Convey": "Check addToList with no value parameter",
        "Zome": "anchors",
        "Raw": true,
        "Input": "JSON.stringify(addToList({ anchor: 'test_anchor' }));",
        "Output": "",
        "Exposure": "public",
        "Err": "JS exec error: Must pass either value or valueHash!",
        "Regexp": ""
    },
    {
        "Convey": "Check getFromList with non-existent key",
        "Zome": "anchors",
        "FnName": "getFromList",
        "Input": { "anchor": "non_existent_key" },
        "Output": "null",
        "Exposure": "public",
        "Err": "",
        "Regexp": ""
    },
    {
        "Convey": "Check getFromList with non-existent key",
        "Zome": "anchors",
        "FnName": "getFromList",
        "Input": { "anchor": "non_existent_key" },
        "Output": "null",
        "Exposure": "public",
        "Err": "",
        "Regexp": ""
    },
    {
        "Convey": "Add value to list",
        "Zome": "anchors",
        "FnName": "addToList",
        "Input": { "anchor": "test_list", "value": "test_value" },
        "Output": "{\"anchorHash\":\"QmQ5j2Ew5J5NpJ9yhJnqTJmD57nK5VJK7Z8SzGwZV5RiJL\",\"linkHash\":\"%h%\",\"valueHash\":\"QmUQCc79iPsjYtz72KZyTRiuH1LJiRiRgKRZH2UwhxqBG5\"}",
        "Exposure": "public",
        "Err": "",
        "Regexp": ""
    },
    {
        "Convey": "get list",
        "Zome": "anchors",
        "FnName": "getFromList",
        "Input": { "anchor": "test_list" },
        "Output": "[\"test_value\"]",
        "Exposure": "public",
        "Err": "",
        "Regexp": ""
    },
    {
        "Convey": "Add another value to list",
        "Zome": "anchors",
        "FnName": "addToList",
        "Input": { "anchor": "test_list", "value": "another_test_value" },
        "Output": "{\"anchorHash\":\"QmQ5j2Ew5J5NpJ9yhJnqTJmD57nK5VJK7Z8SzGwZV5RiJL\",\"linkHash\":\"%h%\",\"valueHash\":\"QmRJ77cbtmVY91JNUSTyNNcpe5nq26yWPCYqALoap93LjC\"}",
        "Exposure": "public",
        "Err": "",
        "Regexp": ""
    },
    {
        "Convey": "Check getFromList with no value or index to make sure both items come back",
        "Zome": "anchors",
        "FnName": "getFromList",
        "Input": { "anchor": "test_list" },
        "Output": "[\"another_test_value\",\"test_value\"]",
        "Exposure": "public",
        "Err": "",
        "Regexp": ""
    },
    {
        "Convey": "Check removeFromList",
        "Zome": "anchors",
        "FnName": "removeFromList",
        "Input": { "anchor": "test_list", "value": "test_value" },
        "Output": "1",
        "Exposure": "public",
        "Err": "",
        "Regexp": ""
    },
    {
        "Convey": "Check getFromList with no value or index to make sure only one item comes back",
        "Zome": "anchors",
        "FnName": "getFromList",
        "Input": { "anchor": "test_list" },
        "Output": "[\"another_test_value\"]",
        "Exposure": "public",
        "Err": "",
        "Regexp": ""
    }
]