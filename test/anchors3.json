[
    {
        "Convey": "Add value to list with index",
        "Zome": "anchors",
        "FnName": "addToList",
        "Input": { "anchor": "test_list", "index": 1, "value": "test_value" },
        "Output": "\"%h2%\"",
        "Exposure": "public",
        "Err": "",
        "Regexp": ""
    },
    {
        "Convey": "get list",
        "Zome": "anchors",
        "FnName": "getFromList",
        "Input": { "anchor": "test_list" },
        "Output": "[{\"index\":1,\"value\":\"test_value\"}]",
        "Exposure": "public",
        "Err": "",
        "Regexp": ""
    },
    {
        "Convey": "Add another value to list with index",
        "Zome": "anchors",
        "FnName": "addToList",
        "Input": { "anchor": "test_list", "index": 2, "value": "another_test_value" },
        "Output": "\"QmQ5j2Ew5J5NpJ9yhJnqTJmD57nK5VJK7Z8SzGwZV5RiJL\"",
        "Exposure": "public",
        "Err": "",
        "Regexp": ""
    },
    {
        "Convey": "Add a third value to list with index",
        "Zome": "anchors",
        "FnName": "addToList",
        "Input": { "anchor": "test_list", "index": 3, "value": "and_yet_another_test_value" },
        "Output": "\"QmQ5j2Ew5J5NpJ9yhJnqTJmD57nK5VJK7Z8SzGwZV5RiJL\"",
        "Exposure": "public",
        "Err": "",
        "Regexp": ""
    },
    {
        "Convey": "Check getFromList with no value to make sure three items come back",
        "Zome": "anchors",
        "FnName": "getFromList",
        "Input": { "anchor": "test_list" },
        "Output": "[{\"index\":2,\"value\":\"another_test_value\"},{\"index\":1,\"value\":\"test_value\"},{\"index\":3,\"value\":\"and_yet_another_test_value\"}]",
        "Exposure": "public",
        "Err": "",
        "Regexp": ""
    },
    {
        "Convey": "Check removeFromList by value",
        "Zome": "anchors",
        "FnName": "removeFromList",
        "Input": { "anchor": "test_list", "value": "test_value" },
        "Output": "1",
        "Exposure": "public",
        "Err": "",
        "Regexp": ""
    },
    {
        "Convey": "Check removeFromList by index",
        "Zome": "anchors",
        "FnName": "removeFromList",
        "Input": { "anchor": "test_list", "index": 2 },
        "Output": "1",
        "Exposure": "public",
        "Err": "",
        "Regexp": ""
    },
    {
        "Convey": "Check getFromList with no value to make sure only one item comes back",
        "Zome": "anchors",
        "FnName": "getFromList",
        "Input": { "anchor": "test_list" },
        "Output": "[{\"index\":3,\"value\":\"and_yet_another_test_value\"}]",
        "Exposure": "public",
        "Err": "",
        "Regexp": ""
    },
    {
        "Convey": "Add a value to list with an existing index",
        "Zome": "anchors",
        "FnName": "addToList",
        "Input": { "anchor": "test_list", "index": 3, "value": "and_an_updated_test_value" },
        "Output": "\"QmQ5j2Ew5J5NpJ9yhJnqTJmD57nK5VJK7Z8SzGwZV5RiJL\"",
        "Exposure": "public",
        "Err": "",
        "Regexp": ""
    },
    {
        "Convey": "Check getFromList with no value to make sure only one item comes back",
        "Zome": "anchors",
        "FnName": "getFromList",
        "Input": { "anchor": "test_list" },
        "Output": "[{\"index\":3,\"value\":\"and_an_updated_test_value\"}]",
        "Exposure": "public",
        "Err": "",
        "Regexp": ""
    },
    {
        "Convey": "Add a value to list with an index and an entryType",
        "Zome": "anchors",
        "FnName": "addToList",
        "Input": { "anchor": "test_list", "index": 3, "entryType": "_anchor_json_type_for_testing_", "value": { "a_property": "and_an_updated_test_value" } },
        "Output": "\"QmQ5j2Ew5J5NpJ9yhJnqTJmD57nK5VJK7Z8SzGwZV5RiJL\"",
        "Exposure": "public",
        "Err": "",
        "Regexp": ""
    },
    {
        "Convey": "Add the same value to list with a different index and an entryType",
        "Zome": "anchors",
        "FnName": "addToList",
        "Input": { "anchor": "test_list", "index": 4, "entryType": "_anchor_json_type_for_testing_", "value": { "a_property": "and_an_updated_test_value" } },
        "Output": "\"QmQ5j2Ew5J5NpJ9yhJnqTJmD57nK5VJK7Z8SzGwZV5RiJL\"",
        "Exposure": "public",
        "Err": "",
        "Regexp": ""
    },
    {
        "Convey": "Check getFromList with no value to make sure two entries comes back",
        "Zome": "anchors",
        "FnName": "getFromList",
        "Input": { "anchor": "test_list" },
        "Output": "[{\"index\":3,\"value\":{\"a_property\":\"and_an_updated_test_value\"}},{\"index\":4,\"value\":{\"a_property\":\"and_an_updated_test_value\"}}]",
        "Exposure": "public",
        "Err": "",
        "Regexp": ""
    },
    {
        "Convey": "Check removeFromList by value",
        "Zome": "anchors",
        "FnName": "removeFromList",
        "Input": { "anchor": "test_list", "value": { "a_property": "and_an_updated_test_value" } },
        "Output": "2",
        "Exposure": "public",
        "Err": "",
        "Regexp": ""
    },
    {
        "Convey": "Check getFromList with no value to make sure no entries comes back",
        "Zome": "anchors",
        "FnName": "getFromList",
        "Input": { "anchor": "test_list" },
        "Output": "[]",
        "Exposure": "public",
        "Err": "",
        "Regexp": ""
    }
]